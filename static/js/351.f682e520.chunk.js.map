{"version":3,"file":"static/js/351.f682e520.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removeNonTranslationalTransform(element));\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.25\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.25\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.25 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps, this);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","_classCallCheck","this","order","scheduled","Set","_createClass","key","value","process","has","add","push","index","indexOf","splice","delete","length","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","remove","frameData","_ref","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","wake","keepAlive","immediate","_createRenderBatcher","queueMicrotask","microtask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","isTransitionDefined","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","elapsed","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","_ref$repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","exec","_match","_slicedToArray","token1","token2","fallback","getVariableValue","depth","_parseCSSVariable","_parseCSSVariable2","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","measureInitialState","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","_toConsumableArray","currentValue","valueAsRead","readValue","scheduleResolve","isColorString","testProp","splitColor","aName","bName","cName","_v$match","_v$match2","c","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","_analyseComplexValue","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","_KeyframeResolver","owner","_get","_getPrototypeOf","keyframe","resolveNoneKeyframes","_unresolvedKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","_ref$autoplay","autoplay","_ref$delay","_ref$type","_ref$repeat","_ref$repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","_this$options","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","then","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","findSpring","envelope","derivative","_ref$duration","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","_definition","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","interpolate","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","_BaseAnimation","_ref$KeyframeResolver","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","onKeyframesResolved","resolveKeyframes","keyframes$1","mapPercentToKeyframes","mirroredGenerator","_this$options2","_this$options2$type","_this$options2$repeat","_this$options2$repeat2","_this$options2$veloci","generatorFactory","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","_this$options$autopla","play","pause","sample","_this$options3","speed","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isOddIteration","isAnimationFinished","finish","driver","newSpeed","hasChanged","resume","_this$options4","_this$options4$driver","onPlay","tick","teardown","onStop","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","_this$options2$durati","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","_excluded2","sampleTime","setWithVelocity","HTMLElement","animateMotionValue","isHandoff","valueTransition","_transition$elapsed","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","setMotionValue","hasValue","addValue","setTarget","_ref$transitionEnd","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","_ref2$delay","transitionOverride","_targetAndTransition$","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","buildResolvedTypeValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetSkewAndRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","read","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","_visualElement","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}